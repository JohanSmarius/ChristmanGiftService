// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SantaTest.Data;

#nullable disable

namespace SantaTest.Migrations
{
    [DbContext(typeof(GiftContext))]
    partial class GiftContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SantaTest.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "New York",
                            HouseNumber = "5000",
                            StreetName = "Avenue"
                        },
                        new
                        {
                            Id = 2,
                            City = "Tilburg",
                            HouseNumber = "1",
                            StreetName = "Kerklaan"
                        });
                });

            modelBuilder.Entity("SantaTest.Models.Child", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FamilyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Children");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FamilyId = 1,
                            Name = "John"
                        },
                        new
                        {
                            Id = 2,
                            FamilyId = 1,
                            Name = "Jane"
                        },
                        new
                        {
                            Id = 3,
                            FamilyId = 2,
                            Name = "Piet"
                        },
                        new
                        {
                            Id = 4,
                            FamilyId = 2,
                            Name = "Sandra"
                        });
                });

            modelBuilder.Entity("SantaTest.Models.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Families");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            Name = "Smith"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            Name = "Jansen"
                        });
                });

            modelBuilder.Entity("SantaTest.Models.Gift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.ToTable("Gifts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChildId = 1,
                            Description = "A doll",
                            Name = "Doll"
                        },
                        new
                        {
                            Id = 2,
                            ChildId = 2,
                            Description = "A cool game to play with the family",
                            Name = "Game"
                        },
                        new
                        {
                            Id = 3,
                            ChildId = 2,
                            Description = "A scary one",
                            Name = "Book"
                        },
                        new
                        {
                            Id = 4,
                            ChildId = 3,
                            Description = "A fast one",
                            Name = "Bicyle"
                        },
                        new
                        {
                            Id = 5,
                            ChildId = 4,
                            Description = "A real time novel",
                            Name = "Book"
                        });
                });

            modelBuilder.Entity("SantaTest.Models.Child", b =>
                {
                    b.HasOne("SantaTest.Models.Family", "Family")
                        .WithMany("Children")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Family");
                });

            modelBuilder.Entity("SantaTest.Models.Family", b =>
                {
                    b.HasOne("SantaTest.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("SantaTest.Models.Gift", b =>
                {
                    b.HasOne("SantaTest.Models.Child", null)
                        .WithMany("Gifts")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SantaTest.Models.Child", b =>
                {
                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("SantaTest.Models.Family", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
